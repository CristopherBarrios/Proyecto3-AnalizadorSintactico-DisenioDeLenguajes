COMPILER Aritmetica

CHARACTERS 

letter = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz". 
digit = "0123456789" .
tab = CHR(9).
eol = CHR(10).

TOKENS

ident = letter{letter|digit} EXCEPT KEYWORDS.
number = digit{digit}.

PRODUCTIONS
     Expr = 
     StatSeq .

     StatSeq = 
     {Stat ";"} .

     Stat = 
     (. value = 0 .) $
      Expression<out value>    $    (. print("Operations Result: ", value) .)
      .

     Expression<out result> = 
      (. result1 = 0; result2 = 0 .) $ Term<out result1>
       {   (& "+" $ Term<out result2>  $ (. result1 = int(result1) .) (. result2 = int(result2) .) (. result1 += result2 .) &)
       |   (& "-" $ Term<out result2>  $ (. result1 = int(result1) .) (. result2 = int(result2) .) (. result1 -= result2 .) &)
       }            $                  (. result = result1 .)
       .

     Term<out result> =	
     (. result1 = 1; result2 = 1 .)  $
     Factor<out result1>
     {    (& '*' $ Factor<out result2> $ (. result1 = int(result1) .) (. result2 = int(result2) .)  (. result1 *= result2 .) &)
      | (& '/' $ Factor<out result2>  $ (. result1 = int(result1) .) (. result2 = int(result2) .)  (. result1 /= result2 .) &)
     }          $                  (. result = result1 .)
     .
	
    Factor<out result> =            
    (. sign = 1 .)
      [ "-"       $                  (. sign = -1 .)
      ]
      (&   Number<out result> (. result *= sign .) &)
     | (& "(" $ Expression<out result> $ ")" (. result *= sign .)
      &)      $                      
      .

     Number<out result> = 
     number $ (. result = int(self.getNumber()) .)
     .


END Aritmetica